/*  */
package fr.inria.diverse.mobileprivacyprofiler.datamodel;

import com.j256.ormlite.dao.ForeignCollection;
import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.field.ForeignCollectionField;
import com.j256.ormlite.table.DatabaseTable;
import com.j256.ormlite.stmt.PreparedQuery;
import com.j256.ormlite.stmt.QueryBuilder;
import com.j256.ormlite.stmt.SelectArg;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Collection;

import org.apache.commons.lang3.StringEscapeUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import fr.inria.diverse.mobileprivacyprofiler.datamodel.associations.Cell_NeighboringCellHistory;
import fr.inria.diverse.mobileprivacyprofiler.datamodel.associations.DetectedWifi_AccessPoint;
// Start of user code additional import for Identity
// End of user code

/** 
  * Identity known on the device 
  */ 
@DatabaseTable(tableName = "identity")
public class Identity {

	public static Log log = LogFactory.getLog(Identity.class);

	public static final String XML_IDENTITY = "IDENTITY";
	public static final String XML_ATT_ID = "id";
	public static final String XML_ATT_PROVIDER = "provider";
	public static final String XML_ATT_LOGIN = "login";
	public static final String XML_ATT_DISPLAYNAME = "displayName";
	public static final String XML_ATT_ASSOCIATEDSERVICES = "associatedServices";
	public static final String XML_ATT_PHONENUMBER1 = "phoneNumber1";
	public static final String XML_ATT_PHONENUMBER2 = "phoneNumber2";
	// id is generated by the database and set on the object automagically
	@DatabaseField(generatedId = true)
	protected int _id;

	/**
     * dbHelper used to autorefresh values and doing queries
     * must be set other wise most getter will return proxy that will need to be refreshed
	 */
	protected MobilePrivacyProfilerDBHelper _contextDB = null;

	/**
	 * object created from DB may need to be updated from the DB for being fully navigable
	 */
	

	/** Service or web site that provides this identity */ 
	@DatabaseField
	protected java.lang.String provider;

	/** login or id used for this identity */ 
	@DatabaseField
	protected java.lang.String login;

	/** Displayable name for this identity */ 
	@DatabaseField
	protected java.lang.String displayName;

	/** known services that uses this identity
(currently just a formated string that lists the services) */ 
	@DatabaseField(dataType = com.j256.ormlite.field.DataType.LONG_STRING)
	protected java.lang.String associatedServices;

	/** Phone number associated to this device
first number in case of multiple SIM cards */ 
	@DatabaseField
	protected java.lang.String phoneNumber1;

	/** Second Phone number associated to this device (SIM card) */ 
	@DatabaseField
	protected java.lang.String phoneNumber2;
	

	// Start of user code Identity additional user properties
	// End of user code
	
	public Identity() {} // needed by ormlite
	public Identity(java.lang.String provider, java.lang.String login, java.lang.String displayName, java.lang.String associatedServices, java.lang.String phoneNumber1, java.lang.String phoneNumber2) {
		super();
		this.provider = provider;
		this.login = login;
		this.displayName = displayName;
		this.associatedServices = associatedServices;
		this.phoneNumber1 = phoneNumber1;
		this.phoneNumber2 = phoneNumber2;
	} 

	public int getId() {
		return _id;
	}
	public void setId(int id) {
		this._id = id;
	}

	public MobilePrivacyProfilerDBHelper getContextDB(){
		return _contextDB;
	}
	public void setContextDB(MobilePrivacyProfilerDBHelper contextDB){
		this._contextDB = contextDB;
	}

	public java.lang.String getProvider() {
		return this.provider;
	}
	public void setProvider(java.lang.String provider) {
		this.provider = provider;
	}
	public java.lang.String getLogin() {
		return this.login;
	}
	public void setLogin(java.lang.String login) {
		this.login = login;
	}
	public java.lang.String getDisplayName() {
		return this.displayName;
	}
	public void setDisplayName(java.lang.String displayName) {
		this.displayName = displayName;
	}
	public java.lang.String getAssociatedServices() {
		return this.associatedServices;
	}
	public void setAssociatedServices(java.lang.String associatedServices) {
		this.associatedServices = associatedServices;
	}
	public java.lang.String getPhoneNumber1() {
		return this.phoneNumber1;
	}
	public void setPhoneNumber1(java.lang.String phoneNumber1) {
		this.phoneNumber1 = phoneNumber1;
	}
	public java.lang.String getPhoneNumber2() {
		return this.phoneNumber2;
	}
	public void setPhoneNumber2(java.lang.String phoneNumber2) {
		this.phoneNumber2 = phoneNumber2;
	}




	public String toXML(String indent, MobilePrivacyProfilerDBHelper contextDB){
		StringBuilder sb = new StringBuilder();
		sb.append(indent+"<");
    	sb.append(XML_IDENTITY);
		sb.append(" "+XML_ATT_ID+"=\"");
		sb.append(this._id);
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_PROVIDER);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.provider));
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_LOGIN);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.login));
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_DISPLAYNAME);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.displayName));
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_ASSOCIATEDSERVICES);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.associatedServices));
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_PHONENUMBER1);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.phoneNumber1));
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_PHONENUMBER2);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.phoneNumber2));
    	sb.append("\" ");
    	sb.append(">");


		// TODO deal with other case

		sb.append("</"+XML_IDENTITY+">");
		return sb.toString();
	}
}
