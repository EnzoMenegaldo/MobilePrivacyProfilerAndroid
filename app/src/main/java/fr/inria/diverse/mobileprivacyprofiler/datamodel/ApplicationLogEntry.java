/*  */
package fr.inria.diverse.mobileprivacyprofiler.datamodel;

import com.j256.ormlite.dao.ForeignCollection;
import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.field.ForeignCollectionField;
import com.j256.ormlite.table.DatabaseTable;
import com.j256.ormlite.stmt.PreparedQuery;
import com.j256.ormlite.stmt.QueryBuilder;
import com.j256.ormlite.stmt.SelectArg;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Collection;

import org.apache.commons.lang3.StringEscapeUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import fr.inria.diverse.mobileprivacyprofiler.datamodel.associations.DetectedWifi_AccessPoint;
// Start of user code additional import for ApplicationLogEntry
// End of user code

/** 
  *  
  */ 
@DatabaseTable(tableName = "applicationLogEntry")
public class ApplicationLogEntry {

	public static Log log = LogFactory.getLog(ApplicationLogEntry.class);

	public static final String XML_APPLICATIONLOGENTRY = "APPLICATIONLOGENTRY";
	public static final String XML_ATT_ID = "id";
	public static final String XML_ATT_STARTDATE = "startDate";
	public static final String XML_ATT_ACTIONDETAILS = "actionDetails";
	public static final String XML_ATT_ENDDATE = "endDate";
	public static final String XML_ATT_CPUUSAGE = "cpuUsage";
	public static final String XML_ATT_BATTERYUSAGE = "batteryUsage";
	public static final String XML_ATT_NETWORKUSAGE = "networkUsage";
	public static final String XML_REF_APPLICATION = "application";
	// id is generated by the database and set on the object automagically
	@DatabaseField(generatedId = true)
	protected int _id;

	/**
     * dbHelper used to autorefresh values and doing queries
     * must be set other wise most getter will return proxy that will need to be refreshed
	 */
	protected MobilePrivacyProfilerDBHelper _contextDB = null;

	/**
	 * object created from DB may need to be updated from the DB for being fully navigable
	 */
	public boolean application_mayNeedDBRefresh = true;
	

	@DatabaseField
	protected java.lang.String startDate;

	@DatabaseField
	protected java.lang.String actionDetails;

	@DatabaseField
	protected java.lang.String endDate;

	@DatabaseField
	protected java.lang.String cpuUsage;

	@DatabaseField
	protected java.lang.String batteryUsage;

	@DatabaseField
	protected java.lang.String networkUsage;
	

	@DatabaseField(foreign = true) //, columnName = USER_ID_FIELD_NAME)
	protected ApplicationHistory application;

	// Start of user code ApplicationLogEntry additional user properties
	// End of user code
	
	public ApplicationLogEntry() {} // needed by ormlite
	public ApplicationLogEntry(java.lang.String startDate, java.lang.String actionDetails, java.lang.String endDate, java.lang.String cpuUsage, java.lang.String batteryUsage, java.lang.String networkUsage) {
		super();
		this.startDate = startDate;
		this.actionDetails = actionDetails;
		this.endDate = endDate;
		this.cpuUsage = cpuUsage;
		this.batteryUsage = batteryUsage;
		this.networkUsage = networkUsage;
	} 

	public int getId() {
		return _id;
	}
	public void setId(int id) {
		this._id = id;
	}

	public MobilePrivacyProfilerDBHelper getContextDB(){
		return _contextDB;
	}
	public void setContextDB(MobilePrivacyProfilerDBHelper contextDB){
		this._contextDB = contextDB;
	}

	public java.lang.String getStartDate() {
		return this.startDate;
	}
	public void setStartDate(java.lang.String startDate) {
		this.startDate = startDate;
	}
	public java.lang.String getActionDetails() {
		return this.actionDetails;
	}
	public void setActionDetails(java.lang.String actionDetails) {
		this.actionDetails = actionDetails;
	}
	public java.lang.String getEndDate() {
		return this.endDate;
	}
	public void setEndDate(java.lang.String endDate) {
		this.endDate = endDate;
	}
	public java.lang.String getCpuUsage() {
		return this.cpuUsage;
	}
	public void setCpuUsage(java.lang.String cpuUsage) {
		this.cpuUsage = cpuUsage;
	}
	public java.lang.String getBatteryUsage() {
		return this.batteryUsage;
	}
	public void setBatteryUsage(java.lang.String batteryUsage) {
		this.batteryUsage = batteryUsage;
	}
	public java.lang.String getNetworkUsage() {
		return this.networkUsage;
	}
	public void setNetworkUsage(java.lang.String networkUsage) {
		this.networkUsage = networkUsage;
	}

	public ApplicationHistory getApplication() {
		try {
			if(application_mayNeedDBRefresh && _contextDB != null){
				_contextDB.applicationHistoryDao.refresh(this.application);
				application_mayNeedDBRefresh = false;
			}
		} catch (SQLException e) {
			log.error(e.getMessage(),e);
		}
		if(_contextDB==null && this.application == null){
			log.warn("ApplicationLogEntry may not be properly refreshed from DB (_id="+_id+")");
		}
		return this.application;
	}
	public void setApplication(ApplicationHistory application) {
		this.application = application;
	}			



	public String toXML(String indent, MobilePrivacyProfilerDBHelper contextDB){
		StringBuilder sb = new StringBuilder();
		sb.append(indent+"<");
    	sb.append(XML_APPLICATIONLOGENTRY);
		sb.append(" "+XML_ATT_ID+"=\"");
		sb.append(this._id);
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_STARTDATE);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.startDate));
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_ACTIONDETAILS);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.actionDetails));
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_ENDDATE);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.endDate));
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_CPUUSAGE);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.cpuUsage));
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_BATTERYUSAGE);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.batteryUsage));
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_NETWORKUSAGE);
    	sb.append("=\"");
		sb.append(StringEscapeUtils.escapeXml(this.networkUsage));
    	sb.append("\" ");
    	sb.append(">");


		// TODO deal with other case

		sb.append("</"+XML_APPLICATIONLOGENTRY+">");
		return sb.toString();
	}
}
